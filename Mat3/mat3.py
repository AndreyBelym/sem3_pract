from math import cos,sin
from mat1 import solvesys 

def approx_func(n,x):
    '''
    approx_func - возвращает значение члена аппроксимирующей функции
    на основе тригонометрического базиса.
    Параметры:
    n - целое - номер члена  аппроксимирующей функции,
    x - веществ. - аргумент функции
    '''
    if n%2:
        return sin((n//2+1)*x)
    else:
        return cos((n//2)*x)
        
def func(x):
    return x**4+3*x-1
    
def make_matrix(x,y,n):
    '''
    make_matrix - функция получения расширенной матрицы коэфициентов
    для системы уравнений коэффициентов аппроксимирующей функции
    на основе тригонометрического базиса.
    Возвращает матрицу СЛАУ коэффициентов аппроксимирующей функции.
    Параметры:
    x,y - список - аргументы и значения аппроксимируемой функции,
    n - целое - степень аппроксимирующей функции
    Локальные переменные:
    a - список - расширенная матрица СЛАУ коэффициентов функции
    i,j,k - целое - переменные-счетчики для работы со списками
    '''
    a=[[0 for j in range (0,n+2)] for i in range (0,n+1)]
    for i in range (0,n+1):
        for j in range (0,n+1):
            for k in range(0,len(x)):
                a[i][j]+=approx_func(i,x[k])*approx_func(j,x[k])
    j=n+1            
    for i in range (0,n+1):
        for k in range(0,len(x)):
            a[i][j]+=approx_func(i,x[k])*y[k]
    return a
            
def make_approx_poly(x,y,n,e):
    '''
    make_approx_poly - расчет коэффициентов аппроксимирующей функции на основе 
    тригонометрического базиса.
    Параметры:
    x,y - список - аргументы и значения аппроксимируемой функции,
    n - целое - степень аппроксимирующей функции,
    e - веществ. - точность решения СЛАУ
    Локальные переменые:
    a - список - расширенная матрица СЛАУ коэффициентов функции
    '''
    a=make_matrix(x,y,n)
    return solvesys(a,e,False)[0]
